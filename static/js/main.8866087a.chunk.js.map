{"version":3,"sources":["App.js","index.js"],"names":["App","useState","error","setError","isLoaded","setIsLoaded","items","setItems","index","setIndex","rover","camera","sol","values","setValue","handleChange","event","target","name","value","useEffect","fetch","then","res","json","result","message","length","Container","maxWidth","Typography","variant","gutterBottom","Grid","container","spacing","item","RadioGroup","aria-label","onChange","FormControlLabel","control","Radio","color","label","TextField","id","InputLabel","Select","labelId","MenuItem","GridList","cellHeight","cols","photos","slice","map","val","GridListTile","rows","src","img_src","style","justifyContent","paddingTop","Button","onClick","prev","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8866087a.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport GridList from \"@material-ui/core/GridList\";\nimport GridListTile from \"@material-ui/core/GridListTile\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Image from \"material-ui-image\";\nimport Button from \"@material-ui/core/Button\";\n\nfunction App() {\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [index, setIndex] = useState(4);\n\n  const [values, setValue] = useState({\n    rover: \"Curiosity\",\n    camera: \"FHAZ\",\n    sol: 0,\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setValue({\n      ...values,\n      [name]: value,\n    });\n  };\n\n  const handleLoad = () => {\n    setIndex((prev) => {\n      if (items.photos.length - 1 >= index) {\n        return prev + 4;\n      } else {\n        return 4;\n      }\n    });\n  };\n\n  useEffect(() => {\n    fetch(\n      `https://api.nasa.gov/mars-photos/api/v1/rovers/${values.rover}/photos?sol=${values.sol}&camera=${values.camera}&api_key=bjUmLB70P9Rm9rF0hBxTtC6Ir4o5kVCSyvZ1Dmzu`\n    )\n      .then((res) => res.json())\n      .then(\n        (result) => {\n          setIsLoaded(true);\n          setItems(result);\n        },\n        (error) => {\n          setIsLoaded(true);\n          setError(error);\n        }\n      );\n  }, [values.rover, values.sol, values.camera]);\n\n  if (error) {\n    return <div>Ошибка: {error.message}</div>;\n  } else if (!isLoaded || items.length === 0) {\n    return <div>Загрузка...</div>;\n  } else {\n    return (\n      <Container maxWidth=\"xl\">\n        <Typography variant=\"h3\" gutterBottom>\n          Test Task for Clover Dynamics\n        </Typography>\n        <Grid container spacing={3}>\n          <Grid item>\n            <RadioGroup\n              aria-label=\"rover\"\n              value={values.rover}\n              name=\"rover\"\n              onChange={handleChange}\n            >\n              <FormControlLabel\n                value=\"Curiosity\"\n                control={<Radio color=\"primary\" />}\n                label=\"Curiosity\"\n              />\n              <FormControlLabel\n                value=\"Opportunity\"\n                control={<Radio color=\"primary\" />}\n                label=\"Opportunity\"\n              />\n              <FormControlLabel\n                value=\"Spirit\"\n                control={<Radio color=\"primary\" />}\n                label=\"Spirit\"\n              />\n            </RadioGroup>\n          </Grid>\n          <Grid item>\n            <TextField\n              id=\"standard-basic\"\n              name=\"sol\"\n              label=\"Sol\"\n              onChange={handleChange}\n            />\n          </Grid>\n          <Grid item>\n            <InputLabel id=\"demo-simple-select-label\">Camera</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={values.camera}\n              name=\"camera\"\n              onChange={handleChange}\n            >\n              <MenuItem value=\"FHAZ\">FHAZ</MenuItem>\n              <MenuItem value=\"RHAZ\">RHAZ</MenuItem>\n              <MenuItem value=\"MAST\">MAST</MenuItem>\n              <MenuItem value=\"CHEMCAM\">CHEMCAM</MenuItem>\n              <MenuItem value=\"MAHLI\">MAHLI</MenuItem>\n              <MenuItem value=\"MARDI\">MARDI</MenuItem>\n              <MenuItem value=\"NAVCAM\">NAVCAM</MenuItem>\n              <MenuItem value=\"PANCAM\">PANCAM</MenuItem>\n              <MenuItem value=\"MINITES\">MINITES</MenuItem>\n            </Select>\n          </Grid>\n        </Grid>\n        <GridList cellHeight=\"auto\" cols={2} spacing={10}>\n          {items.photos.slice(0, index).map((val) => (\n            <GridListTile key={val.id} cols={1} rows={2}>\n              <Image src={val.img_src} />\n            </GridListTile>\n          ))}\n        </GridList>\n        {items.photos.length !== 0 ? (\n          <Grid\n            container\n            style={{ justifyContent: \"center\", paddingTop: \"1%\" }}\n          >\n            <Button variant=\"contained\" color=\"primary\" onClick={handleLoad}>\n              Load More...\n            </Button>\n          </Grid>\n        ) : null}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}